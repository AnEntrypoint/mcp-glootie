/**
 * Updated test file for MCP compatibility
 * Generated by update-test-expectations.js
 */

export default [
  {
    "name": "Console log with multiple arguments",
    "code": "console.log('Value:', 42, 'is the answer'); return 'done';",
    "expected": "Value: 42 is the answer"
  },
  {
    "name": "Console error",
    "code": "console.error('This is an error message'); return 'done';",
    "expected": "This is an error message"
  },
  {
    "name": "Console warn",
    "code": "console.warn('This is a warning'); return 'done';",
    "expected": "This is a warning"
  },
  {
    "name": "Console with format specifiers",
    "code": "console.log('Cart has %d items', 5); return 'done';",
    "expected": "Cart has 5 items"
  },
  {
    "name": "Console dir",
    "code": "console.dir({ nested: { value: 42 } }); return 'done';",
    "expected": "{ nested: { value: 42 } }"
  },
  {
    "name": "Console table",
    "code": "console.table([{ a: 1, b: 2 }, { a: 3, b: 4 }]); return 'done';",
    "expected": "[ { a: 1, b: 2 }, { a: 3, b: 4 } ]"
  },
  {
    "name": "Console mixed deep objects",
    "code": "const obj = { array: [1, 2, 3], nested: { a: { b: { c: 42 } } }, fn: function fn() {} }; console.log(obj); return 'done';",
    "expected": "array: [ 1, 2, 3 ]"
  },
  {
    "name": "Console with very large output",
    "code": "console.log('Large output test'); return 'done';",
    "expected": "Large output test"
  },
  {
    "name": "Console info",
    "code": "console.info('Informational message'); return 'done';",
    "expected": "Informational message"
  },
  {
    "name": "Console log with circular references",
    "code": "const obj = {}; obj.self = obj; console.log(obj); return 'done';",
    "expected": "self: [Circular"
  }
];