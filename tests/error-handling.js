/**
 * Updated test file for MCP compatibility
 * Generated by update-test-expectations.js
 */

export default [
  {
    "name": "Custom error with stack trace",
    "code": "const err = new Error(\"Custom error with stack\"); throw err;",
    "expectedError": "Custom error with stack",
    "expected": "Custom error with stack\n    at evalmachine.<anonymous>:3:21\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "Error with custom properties",
    "code": "const err = new Error(\"With props\"); err.code = \"ERR_CUSTOM\"; throw err;",
    "expectedError": "ERR_CUSTOM",
    "expected": "With props\n    at evalmachine.<anonymous>:3:21\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "TypeError with message",
    "code": "throw new TypeError(\"Invalid type provided\");",
    "expectedError": "TypeError: Invalid type provided",
    "expected": "Invalid type provided\n    at evalmachine.<anonymous>:3:15\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "SyntaxError direct throw",
    "code": "throw new SyntaxError(\"Invalid syntax\");",
    "expectedError": "SyntaxError: Invalid syntax",
    "expected": "Invalid syntax\n    at evalmachine.<anonymous>:3:15\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "RangeError direct throw",
    "code": "throw new RangeError(\"Value out of range\");",
    "expectedError": "RangeError: Value out of range",
    "expected": "Value out of range\n    at evalmachine.<anonymous>:3:15\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "URIError direct throw",
    "code": "throw new URIError(\"Invalid URI\");",
    "expectedError": "URIError: Invalid URI",
    "expected": "Invalid URI\n    at evalmachine.<anonymous>:3:15\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "EvalError direct throw",
    "code": "throw new EvalError(\"Eval error\");",
    "expectedError": "EvalError: Eval error",
    "expected": "Eval error\n    at evalmachine.<anonymous>:3:15\n    at evalmachine.<anonymous>:7:7\n    at Script.runInContext (node:vm:149:12)\n    at file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:128:38\n    at executeCode (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:133:9)\n    at processRequest (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:273:28)\n    at Socket.<anonymous> (file:///C:/Users/user/Documents/Cline/MCP/simple-repl/simple-repl-server.js:324:32)\n    at Socket.emit (node:events:507:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)"
  },
  {
    "name": "Nested try-catch blocks",
    "code": "\n      try {\n        try {\n          throw new Error(\"Inner error\");\n        } catch (innerErr) {\n          throw new Error(\"Outer error: \" + innerErr.message);\n        }\n      } catch (err) {\n        return \"Caught: \" + err.message;\n      }\n    ",
    "expectedResult": "Caught: Outer error: Inner error",
    "expected": "Caught: Outer error: Inner error"
  },
  {
    "name": "Custom error class",
    "code": "\n      class CustomError extends Error {\n        constructor(message) {\n          super(message);\n          this.name = \"CustomError\";\n        }\n      }\n      try {\n        throw new CustomError(\"Custom error message\");\n      } catch (err) {\n        return `${err.name}: ${err.message}`;\n      }\n    ",
    "expectedResult": "CustomError: Custom error message",
    "expected": "CustomError: Custom error message"
  },
  {
    "name": "Error in callback",
    "code": "\n      function executeCallback(cb) {\n        try {\n          return cb();\n        } catch (err) {\n          return \"Error in callback: \" + err.message;\n        }\n      }\n      return executeCallback(() => { throw new Error(\"Callback failed\"); });\n    ",
    "expectedResult": "Error in callback: Callback failed",
    "expected": "Error in callback: Callback failed"
  },
  {
    "name": "Deep stack trace",
    "code": "\n      function level3() { throw new Error(\"Deep error\"); }\n      function level2() { level3(); }\n      function level1() { level2(); }\n      try {\n        level1();\n      } catch (err) {\n        return err.stack.includes(\"level3\") && err.stack.includes(\"level2\") && err.stack.includes(\"level1\");\n      }\n    ",
    "expectedResult": "true",
    "expected": "true"
  }
];